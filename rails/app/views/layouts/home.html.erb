<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="content-type" content="text/html;charset=UTF-8" />
	<meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
	<title>Stations: <%= controller.action_name %></title>
	<%= stylesheet_link_tag 'scaffold' %>
	<%= stylesheet_link_tag 'index' %>
	<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>
	<%= javascript_include_tag 'prototype' %>
	<%= javascript_include_tag 'maps' %>
	<script>
	function initialize()
	{
		handleResize();
		
		var mylatlng = new google.maps.LatLng(<%= SCAN_CONFIG['latitude'] %>, <%= SCAN_CONFIG['longitude'] %>);
		var centerlatlng = new google.maps.LatLng(<%= @map_location['latitude'] %>, <%= @map_location['longitude'] %>);
		var myOptions =
		{
			zoom: <%= @zoom %>,
			center: centerlatlng,
			disableDefaultUI: true,
			mapTypeId: google.maps.MapTypeId.ROADMAP
		};
		map = new google.maps.Map(document.getElementById("map"), myOptions);

		google.maps.event.addListener(map, 'click', function()
		{
			clearActive();
// 			clearMoved();
		});

		google.maps.event.addListener(map, 'zoom_changed', function() {
			document.getElementById('zoom').value = map.getZoom();
		});

		google.maps.event.addListener(map, 'center_changed', function() {
			var center = map.getCenter();

			document.getElementById('location_latitude').value = center.lat();
			document.getElementById('location_longitude').value = center.lng();
		});
<%
	def get_marker_image(ss)
		if ss > 70
			return "http://maps.gstatic.com/intl/en_us/mapfiles/ms/micons/green-dot.png";
		elsif ss > 50
			return "http://maps.gstatic.com/intl/en_us/mapfiles/ms/micons/yellow-dot.png";
		else
			return "http://maps.gstatic.com/intl/en_us/mapfiles/ms/micons/red-dot.png";
		end
	end

	def info_window(log)
		station = log.station
		window = Hash.new

		content = station.callsign + "<br /><hr>\nLast received on " + log.created_at.to_s + '<br />'
		content += 'Channel: ' + station.rf.to_s + '<br />'
		content += 'Distance: ' + station.distance.round(2).to_s + ' mi<br />'
		content += 'Most recent scan: <br />'
		content += 'Signal Strength: ' + log.signal_strength.to_s + '<br />'
		content += 'Signal to Noize: ' + log.signal_to_noise.to_s + '<br />'
		content += 'Signal Quality: ' + log.signal_quality.to_s + '<br />'
		
		window['content'] = content

		return window.to_json
	end
%>

<% @logs.each do |log| %>
<% station = log.station %>

var marker = new google.maps.Marker(
{
	position: new google.maps.LatLng(<%= station.latitude %>, <%= station.longitude %>),
	map: map,
	draggable: false,
	clickable: true,
	title:'<%= station.callsign %>',
	zIndex: 0,
	icon: '<%= get_marker_image(log.signal_strength) %>'
});

// infowindows['<%= station.callsign %>']
marker.infoWindow = new google.maps.InfoWindow(<%= info_window(log) %>);

marker.infoWindow.realClose = function()
{
	this.close();
}

active=undefined;
marker.click = function()
{
	// clear any active
	clearActive();
	
	active=marker;
	this.setZIndex(2);
	this.infoWindow.open(map, this);
};

google.maps.event.addListener(marker, 'click', marker.click);

addPoint(marker);

markers['<%= station.callsign %>'] = marker

<% end %>
}

</script>
</head>
<body onload='initialize()'>

<p style="color: green"><%= notice %></p>

<%= yield %>

</body>
</html>
