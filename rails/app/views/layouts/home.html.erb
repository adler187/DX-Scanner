<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="content-type" content="text/html;charset=UTF-8" />
	<meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
	<title>Stations: <%= controller.action_name %></title>
	<%= stylesheet_link_tag 'scaffold' %>
	<%= stylesheet_link_tag 'index' %>
	<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>
	<%= javascript_include_tag 'prototype' %>
	<%= javascript_include_tag 'maps' %>
	<script>
	
	function initialize()
	{

		handleResize();
		
		var centerlatlng = new google.maps.LatLng(<%= @map_location[:latitude] %>, <%= @map_location[:longitude] %>);
		var myOptions =
		{
			zoom: <%= @zoom %>,
			center: centerlatlng,
			disableDefaultUI: true,
			mapTypeId: google.maps.MapTypeId.ROADMAP
		};
		map = new google.maps.Map(document.getElementById("map"), myOptions);

		google.maps.event.addListener(map, 'click', function()
		{
			map.clearActive();
// 			clearMoved();
		});

		google.maps.event.addListener(map, 'zoom_changed', function(){
			document.getElementById('zoom').value = map.getZoom();
		});

		google.maps.event.addListener(map, 'center_changed', function() {
			var center = map.getCenter();

			document.getElementById('location_latitude').value = center.lat();
			document.getElementById('location_longitude').value = center.lng();
		});

		function get_marker_image(ss)
		{
			if (ss > 70)
				return "http://maps.gstatic.com/intl/en_us/mapfiles/ms/micons/green-dot.png";
			else if (ss > 50)
				return "http://maps.gstatic.com/intl/en_us/mapfiles/ms/micons/yellow-dot.png";
			else
				return "http://maps.gstatic.com/intl/en_us/mapfiles/ms/micons/red-dot.png";
		}

		function info_window(station)
		{
			content = station.callsign + "<br /><hr>\nLast received on " + station.created_at + '<br />';
			content += 'Channel: ' + station.rf + '<br />';
			content += 'Distance: ' + Math.round(station.distance * 100) / 100 + ' mi<br />';
			content += 'Most recent scan: <br />';
			content += 'Signal Strength: ' + station.signal_strength + '<br />';
			content += 'Signal to Noize: ' + station.signal_to_noise + '<br />';
			content += 'Signal Quality: ' + station.signal_quality + '<br />';

			return { content: content };
		}

		var tuner_select = document.getElementById('tuner_id');
		console.debug(tuner_select.options[tuner_select.selectedIndex].value);
		new Ajax.Request('/home.json', {
			method:'get',
			parameters: { 'tuner[id]' : tuner_select.options[tuner_select.selectedIndex].value },
			onSuccess: function(transport)
			{
				var list = document.getElementById('logs-list');
				
				var json = transport.responseText.evalJSON();
				for(var i = 0; i < json.length; i++)
				{
					var station = json[i].log;
					var marker = new google.maps.Marker(
					{
						position: new google.maps.LatLng(station.latitude, station.longitude),
						map: map,
						draggable: false,
						clickable: true,
						title: station.callsign,
						zIndex: 0,
						icon: get_marker_image(station.signal_strength)
					});

					marker.infoWindow = new google.maps.InfoWindow(info_window(station));
					
					google.maps.event.addListener(marker, 'click', marker.click);
					
					markers[station.callsign] = marker

					item = document.createElement('li');
					item.innerHTML = station.callsign;
					
					item.onclick = function()
					{
						markers[this.innerHTML].click();
					};
					console.debug(item.onclick);
					list.appendChild(item);
				}

			},
			onFailure: function(){ alert('Something went wrong...') }
		});


}

</script>
</head>
<body onload='initialize()'>

<p style="color: green"><%= notice %></p>

<%= yield %>

</body>
</html>
